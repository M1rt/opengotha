/*
 * JFrPreferences.java
 */

package info.vannier.gotha;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luc Vannier
 */
public class JFrPreferencesOptions extends javax.swing.JFrame {
    private static final long REFRESH_DELAY = 2000;

    /** Creates new form JFrPreferences */
    public JFrPreferencesOptions() {
        initComponents();
        customInitComponents();
        setupRefreshPreferencesTimer();
    }

    // This setupRefreshTimer is dedicated to refresh Preferences and not Tournament data
    private void setupRefreshPreferencesTimer() {
        ActionListener taskPerformer = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                updateAllViews();
            }
        };
        new javax.swing.Timer((int) REFRESH_DELAY, taskPerformer).start();
    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpHelpLanguage = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pnlAllPreferences = new javax.swing.JPanel();
        scpAllPreferences = new javax.swing.JScrollPane();
        tblAllPreferences = new javax.swing.JTable();
        btnClearAllPreferences = new javax.swing.JButton();
        pnlInternetAccess = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ckbJournaling = new javax.swing.JCheckBox();
        ckbRatingLists = new javax.swing.JCheckBox();
        ckbPhotos = new javax.swing.JCheckBox();
        btnHelp = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");
        setResizable(false);
        getContentPane().setLayout(null);

        pnlAllPreferences.setBorder(javax.swing.BorderFactory.createTitledBorder("All OpenGotha Preferences"));
        pnlAllPreferences.setLayout(null);

        tblAllPreferences.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "key", "value"
            }
        ));
        scpAllPreferences.setViewportView(tblAllPreferences);

        pnlAllPreferences.add(scpAllPreferences);
        scpAllPreferences.setBounds(10, 20, 750, 190);

        btnClearAllPreferences.setText("Clear all OpenGotha Preferences");
        btnClearAllPreferences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllPreferencesActionPerformed(evt);
            }
        });
        pnlAllPreferences.add(btnClearAllPreferences);
        btnClearAllPreferences.setBounds(10, 230, 750, 23);

        getContentPane().add(pnlAllPreferences);
        pnlAllPreferences.setBounds(10, 20, 770, 260);

        pnlInternetAccess.setBorder(javax.swing.BorderFactory.createTitledBorder("Internet access"));
        pnlInternetAccess.setLayout(null);

        jLabel1.setText("Enable Internet access for :");
        pnlInternetAccess.add(jLabel1);
        jLabel1.setBounds(10, 30, 220, 14);

        ckbJournaling.setSelected(true);
        ckbJournaling.setText("Journaling report");
        ckbJournaling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbJournalingActionPerformed(evt);
            }
        });
        pnlInternetAccess.add(ckbJournaling);
        ckbJournaling.setBounds(30, 110, 170, 23);

        ckbRatingLists.setSelected(true);
        ckbRatingLists.setText("Rating lists download");
        ckbRatingLists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbRatingListsActionPerformed(evt);
            }
        });
        pnlInternetAccess.add(ckbRatingLists);
        ckbRatingLists.setBounds(30, 50, 170, 23);

        ckbPhotos.setSelected(true);
        ckbPhotos.setText("Photos download");
        ckbPhotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbPhotosActionPerformed(evt);
            }
        });
        pnlInternetAccess.add(ckbPhotos);
        ckbPhotos.setBounds(30, 80, 170, 23);

        getContentPane().add(pnlInternetAccess);
        pnlInternetAccess.setBounds(10, 310, 770, 150);

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/info/vannier/gotha/gothalogo16.jpg"))); // NOI18N
        btnHelp.setText("help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        getContentPane().add(btnHelp);
        btnHelp.setBounds(10, 470, 120, 30);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose);
        btnClose.setBounds(150, 470, 630, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
}//GEN-LAST:event_btnCloseActionPerformed

    private void btnClearAllPreferencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllPreferencesActionPerformed
        Preferences prefsRoot = Preferences.userRoot();
        Preferences gothaPrefs = prefsRoot.node(Gotha.strPreferences);
        try {
            gothaPrefs.clear();
        } catch (BackingStoreException ex) {
            Logger.getLogger(JFrPreferencesOptions.class.getName()).log(Level.SEVERE, null, ex);
        }
        Gotha.setRatingListsDownloadEnabled(true);
        Gotha.setPhotosDownloadEnabled(true);
        Gotha.setJournalingReportEnabled(true);

        updateAllViews();
    }//GEN-LAST:event_btnClearAllPreferencesActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        Gotha.displayGothaHelp("Preferences frame");
}//GEN-LAST:event_btnHelpActionPerformed

    private void ckbJournalingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbJournalingActionPerformed
        Gotha.setJournalingReportEnabled(this.ckbJournaling.isSelected());
    }//GEN-LAST:event_ckbJournalingActionPerformed

    private void ckbPhotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbPhotosActionPerformed
         Gotha.setPhotosDownloadEnabled(this.ckbPhotos.isSelected());
    }//GEN-LAST:event_ckbPhotosActionPerformed

    private void ckbRatingListsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbRatingListsActionPerformed
        Gotha.setRatingListsDownloadEnabled(this.ckbRatingLists.isSelected());
    }//GEN-LAST:event_ckbRatingListsActionPerformed
    
    private void displayAllPreferences(){
    }
    
    private void customInitComponents(){
        int w = JFrGotha.MEDIUM_FRAME_WIDTH;
        int h = JFrGotha.MEDIUM_FRAME_HEIGHT;
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((dim.width - w)/2, (dim.height -h)/2, w, h);

        setIconImage(Gotha.getIconImage());
        this.updateAllViews();
    }
    private void updateAllViews(){
        updatePnlPref();
        updatePnlInternetAccess();
    }
    
    private void updatePnlPref(){
        Preferences prefsRoot = Preferences.userRoot();
        Preferences gothaPrefs = prefsRoot.node(Gotha.strPreferences);
        String[] strPrefs = null;
        try {
            strPrefs = gothaPrefs.keys();
        } catch (BackingStoreException ex) {
            Logger.getLogger(JFrPreferencesOptions.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int len;
        if (strPrefs == null) len = 0;
        else len = strPrefs.length;
        DefaultTableModel model = (DefaultTableModel) tblAllPreferences.getModel();
        model.setRowCount(len);
        for (int i = 0; i < len; i++){
            String key = strPrefs[i];
            System.out.println("" + key);
            String value = gothaPrefs.get(key, "def");
            System.out.println("" + value);
            
            model.setValueAt(key, i, 0);
            model.setValueAt(value, i, 1);
        }
    }

    private void updatePnlInternetAccess(){
        this.ckbRatingLists.setSelected(Gotha.isRatingListsDownloadEnabled());
        this.ckbPhotos.setSelected(Gotha.isPhotosDownloadEnabled());
        this.ckbJournaling.setSelected(Gotha.isJournalingReportEnabled());
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearAllPreferences;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnHelp;
    private javax.swing.JCheckBox ckbJournaling;
    private javax.swing.JCheckBox ckbPhotos;
    private javax.swing.JCheckBox ckbRatingLists;
    private javax.swing.ButtonGroup grpHelpLanguage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel pnlAllPreferences;
    private javax.swing.JPanel pnlInternetAccess;
    private javax.swing.JScrollPane scpAllPreferences;
    private javax.swing.JTable tblAllPreferences;
    // End of variables declaration//GEN-END:variables

}
